name: E2E Test (Docker)
on: [push, pull_request]

jobs:
  e2e-test:
    name: Docker + Node.js
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ["12.x"]

    steps:
      - name: Checkout https://github.com/${{ github.repository }} @ ${{ github.ref }}
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Use cache (dependencies)
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ~/.cache
          key: ${{ runner.os }}-node${{ matrix.node-version }}-cypress-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: |
          npm ci
          npm run cy:verify

      - name: Use cache (images)
        uses: actions/cache@v2
        with:
          path: ~/docker-images
          key: ${{ runner.os }}-node${{ matrix.node-version }}-docker-${{ hashFiles('package-lock.json') }}
        id: img-cache

      - name: Load cached images
        if: steps.img-cache.outputs.cache-hit == 'true'
        run: docker load -i ~/docker-cache/images.tar || true

      - name: Clear images
        if: steps.img-cache.outputs.cache-hit != 'true'
        run: docker system prune --all --force

      - name: Build images
        run: |
          NODE_ENV=test docker-compose build
          docker images -a
          mkdir ~/docker-cache
          docker save -o ~/docker-cache/images.tar $(docker images -a -q)

      - name: Pull images
        run: |
          docker-compose pull

      - name: Run Cypress test suite
        run: |
          NODE_ENV=test npm run start-infra --silent &
          npm run test:ci
